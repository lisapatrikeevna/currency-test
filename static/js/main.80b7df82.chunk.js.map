{"version":3,"sources":["components/CurrencyExchange/CurrencyExchange.module.css","components/Header/Header.module.css","components/CurrencyRates/CurrencyRates.module.css","redux/currencyReducer.ts","components/Header/Header.tsx","redux/Api.ts","redux/currencyRatesReducer.ts","components/CurrencyRates/CurrencyRates.tsx","components/CurrencyExchange/CurrencyExchange.tsx","containers/CurrencyExchangeContainer/CurrencyExchangeContainer.tsx","App.tsx","reportWebVitals.js","redux/state.ts","index.js"],"names":["module","exports","ACTIONS_TYPE","PATH","Header","className","cl","nav","to","activeClassName","active","item","instans","axios","create","baseURL","Currency","get","initialState","currencies","currentCurrency","isBuying","amountOfBYN","amountOfCurrency","items","names","getCurrencyTC","dispatch","then","res","ollData","data","type","payload","newData","map","el","currencyName","ccy","buyRate","buy","sellRate","sale","GET_CURRENCY","getCurrencyForCalcAC","CurrencyRates","useDispatch","useEffect","currencyItems","useSelector","state","currencyRates","useState","setBuy","setSale","favorites","center","i","index","wrap","blockLeft","style","paddingTop","wrapCurrency","first","base_ccy","next","onClick","e","currentTarget","innerText","console","log","wrapNum","light","any","dark","CurrencyExchange","currenciesName","currencyRate","changeCurrencyField","changeAction","changeCurrentCurrency","viewCurrency","value","data-currency","onChange","container","currency","currencyNames","currencyAction","data-action","CurrencyEContainer","setCurrencyAmount","CHANGE_CURRENCY_FIELD_TYPE","ChangeCurrencyFieldAC","setAction","CHANGE_CHANGE_ACTION","ChangeActionAC","changeCurrency","CHANGE_CURRENT_CURRENCY","changeCurrentCurrencyAC","isFinite","dataset","Number","toFixed","action","App","path","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80b7df82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CurrencyExchange_container__4C2UD\",\"currency\":\"CurrencyExchange_currency__aZ-SD\",\"currencyNames\":\"CurrencyExchange_currencyNames__MYBb_\",\"currencyAction\":\"CurrencyExchange_currencyAction__IYZNj\",\"active\":\"CurrencyExchange_active__NZH1L\",\"currencies\":\"CurrencyExchange_currencies__1wmwz\",\"activeCurrency\":\"CurrencyExchange_activeCurrency__2xA4F\",\"fields\":\"CurrencyExchange_fields__1SFmF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Header_item__1phNF\",\"nav\":\"Header_nav__Ul1is\",\"active\":\"Header_active__37r-Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"CurrencyRates_wrap__D2ok5\",\"wrapCurrency\":\"CurrencyRates_wrapCurrency__2Yz1t\",\"wrapNum\":\"CurrencyRates_wrapNum__3kDNo\",\"blockLeft\":\"CurrencyRates_blockLeft__3_cpl\",\"center\":\"CurrencyRates_center__3x8jH\",\"item\":\"CurrencyRates_item__1-1MS\",\"light\":\"CurrencyRates_light__3nQ-0\",\"dark\":\"CurrencyRates_dark__2nqvf\",\"any\":\"CurrencyRates_any__2A-nU\",\"first\":\"CurrencyRates_first__1fnLC\",\"next\":\"CurrencyRates_next__1QTGQ\"};","export enum ACTIONS_TYPE {\n  CHANGE_CURRENCY_FIELD_TYPE = 'CurrencyExchange/CHANGE_CURRENCY_FIELD_TYPE',\n  CHANGE_CHANGE_ACTION = 'CurrencyExchange/CHANGE_CHANGE_ACTION',\n  CHANGE_CURRENT_CURRENCY = 'CurrencyExchange/CHANGE_CURRENT_CURRENCY',\n  GET_CURRENCY = 'CurrencyExchange/GET_CURRENCY',\n}\nexport type getCurrencyForCalcACType = { type: ACTIONS_TYPE.GET_CURRENCY, payload: Array<CurrencyTypeForCalc> };\nexport type ChangeCurrencyFieldType = { type: ACTIONS_TYPE.CHANGE_CURRENCY_FIELD_TYPE, payload:{ amountOfBYN:string, amountOfCurrency:string } };\nexport type ChangeCurrentCurrencyType = { type:ACTIONS_TYPE.CHANGE_CURRENT_CURRENCY ,payload:{ currentCurrency: string } };\nexport type ChangeAction = { type:ACTIONS_TYPE.CHANGE_CHANGE_ACTION ,payload:{ isBuying:boolean } };\nexport type CurrencyTypeForCalc = {\n  currencyName: string\n  buyRate: number\n  sellRate: number\n};\nexport type CurrencyState = {\n  currencies: Array<CurrencyTypeForCalc>\n  currentCurrency: string\n  isBuying: boolean\n  amountOfBYN: string\n  amountOfCurrency: string\n};\n\nconst initialState: CurrencyState = {\n  currencies: [ ],\n  currentCurrency: 'USD',\n  isBuying: true,\n  amountOfBYN: '',\n  amountOfCurrency: '',\n};\nexport type CurrencyReducersTypes = ChangeCurrencyFieldType | ChangeAction | ChangeCurrentCurrencyType | getCurrencyForCalcACType\nexport const currencyReducer = (state: CurrencyState = initialState, action: CurrencyReducersTypes): CurrencyState => {\n  // @ts-ignore\n  switch (action.type) {\n    case ACTIONS_TYPE.GET_CURRENCY: {\n      return {\n        ...state,\n        currencies: action.payload,\n      }\n    }\n    case ACTIONS_TYPE.CHANGE_CURRENCY_FIELD_TYPE:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    case ACTIONS_TYPE.CHANGE_CHANGE_ACTION:\n      return {\n      ...state,\n        ...action.payload,\n    }\n    case ACTIONS_TYPE.CHANGE_CURRENT_CURRENCY:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state;\n  }\n};\n\nexport const ChangeCurrencyFieldAC = (amountOfBYN: string, amountOfCurrency: string): ChangeCurrencyFieldType => {\n  return {type:ACTIONS_TYPE.CHANGE_CURRENCY_FIELD_TYPE, payload:{amountOfBYN,amountOfCurrency},}\n};\n// @ts-ignore\nexport const ChangeActionAC = (isBuying: boolean): ChangeAction => {\n  return {type:ACTIONS_TYPE.CHANGE_CHANGE_ACTION, payload:{isBuying},}};\nexport const changeCurrentCurrencyAC = (currentCurrency: string): ChangeCurrentCurrencyType => {\n  return {type:ACTIONS_TYPE.CHANGE_CURRENT_CURRENCY, payload:{currentCurrency},}};\nexport const getCurrencyForCalcAC=(payload:CurrencyTypeForCalc[])=>({type:ACTIONS_TYPE.GET_CURRENCY,payload}as const)\n\n","import React from 'react';\r\nimport { NavLink} from 'react-router-dom';\r\nimport cl from './Header.module.css'\r\n\r\nexport  const PATH = {\r\n    CURRENSYRATES: '/CurrencyRates',\r\n    CALCULATOR:'/CurrencyEContainer'\r\n}\r\nconst Header = () => {\r\n    return (\r\n        <div className={cl.nav}>\r\n            <NavLink to={PATH.CURRENSYRATES} activeClassName={cl.active} className={cl.item}>CurrencyRates</NavLink>\r\n            <NavLink to={PATH.CALCULATOR} activeClassName={cl.active} className={cl.item}>CurrencyExchange</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import axios from \"axios\";\r\n\r\nconst instans=axios.create({\r\n    baseURL: 'https://api.privatbank.ua/p24api/',\r\n})\r\n\r\n//https://api.privatbank.ua/#p24/exchange\r\nexport const Currency = {\r\n    get(){\r\n        return instans.get('pubinfo?exchange&json&coursid=11')\r\n    }\r\n}","import {Dispatch} from \"redux\";\nimport {Currency} from \"./Api\";\nimport {CurrencyTypeForCalc, getCurrencyForCalcAC} from \"./currencyReducer\";\n\nexport type CurrencyType = {\n  ccy:string\n  base_ccy: string\n  buy: number\n  sale: number\n};\ntype initialStateType={\n  items: Array<CurrencyType>\n  names: Array<string>\n}\nexport type GetCurrencyACType = ReturnType<typeof getCurrencyAC>\nexport type setFavoritesACType = ReturnType<typeof setFavoritesAC>\ntype currencyRatesReducerTypes=GetCurrencyACType | setFavoritesACType\n\nlet  initialState:initialStateType= {\n  items:[],\n  names: [],\n};\n\nexport const currencyRatesReducer = (state = initialState, action: currencyRatesReducerTypes): initialStateType => {\n  switch (action.type) {\n    case 'GET_CURRENCY': {\n      return {...state,\n        items: action.payload}\n    }\n    case 'SET_FAVORITES': {\n      return {...state,names: [...state.names, action.payload]\n      }\n    }\n    default:\n      return state;\n  }\n};\nconst getCurrencyAC=(payload:CurrencyType[])=>({type:'GET_CURRENCY',payload}as const)\nexport const setFavoritesAC=(payload:string)=>({type: 'SET_FAVORITES',payload}as const)\nexport const getCurrencyTC=()=>(dispatch:Dispatch)=>{\n  Currency.get().then(res=>{\n    let ollData = res.data\n    dispatch(getCurrencyAC(ollData))\n    let newData:Array<CurrencyTypeForCalc> = res.data.map((el:any)=>{\n      return {currencyName: el.ccy, buyRate: el.buy, sellRate: el.sale} as CurrencyTypeForCalc\n    })\n    dispatch(getCurrencyForCalcAC(newData))\n  })\n}","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/state\";\r\nimport {CurrencyType,  getCurrencyTC, setFavoritesAC} from \"../../redux/currencyRatesReducer\";\r\nimport cl from './CurrencyRates.module.css'\r\n\r\nconst CurrencyRates = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getCurrencyTC())\r\n    }, [dispatch])\r\n    let currencyItems = useSelector<RootStateType, Array<CurrencyType>>(state => state.currencyRates.items)\r\n    let [buy, setBuy] = useState<boolean>(false)\r\n    const onBuy = () => {\r\n        setBuy(!buy)\r\n        if (sale) {\r\n            setSale(!sale)\r\n        }\r\n    }\r\n    let [sale, setSale] = useState<boolean>(false)\r\n    const onSale = () => {\r\n        setSale(!sale)\r\n        if (buy) {\r\n            setBuy(!buy)\r\n        }\r\n    }\r\n    let favorites = useSelector<RootStateType,Array<string>>(state => state.currencyRates.names)\r\n\r\n    return (\r\n        <div className={cl.center}>\r\n            <div>\r\n                <p>favorites:{ favorites.map((i,index)=><span key={`{i.name}+ {index}`}>{i} ,</span>)}</p>\r\n            </div>\r\n            <div className={cl.wrap}>\r\n                <div className={cl.blockLeft}>\r\n                    <p>currency: </p>\r\n                    <p style={{paddingTop: '22px'}}>exchange: </p>\r\n                </div>\r\n                {currencyItems.map((i, index) => {\r\n                    const onSetFav = (e: React.MouseEvent<HTMLParagraphElement>) => {\r\n                        dispatch(setFavoritesAC(e.currentTarget.innerText))\r\n                        debugger\r\n                        console.log(e.currentTarget.innerText)\r\n                    }\r\n                    return (\r\n                        <div key={index} className={cl.item}>\r\n                        <div className={cl.wrapCurrency}>\r\n                            <p className={cl.first}>{i.base_ccy} </p>\r\n                            <p className={cl.next} onClick={onSetFav}>{i.ccy}</p>\r\n                        </div>\r\n                        <div className={cl.wrapNum}>\r\n                            <p className={buy ? cl.light : cl.any}>{i.buy}</p>\r\n                            <p className={sale ? cl.dark : cl.any}>{i.sale}</p>\r\n                        </div>\r\n                    </div>)\r\n                })}\r\n            </div>\r\n            <div>\r\n                <button className={cl.light} onClick={onBuy}>buy</button>\r\n                <button className={cl.dark} onClick={onSale}>sale</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CurrencyRates;","import React from 'react';\nimport cl from './CurrencyExchange.module.css'\n\ntype CurrencyExchangePropsType = {\n    currenciesName: string[];\n    currentCurrency: string;\n    currencyRate: number;\n    isBuying: boolean;\n    amountOfBYN: string;\n    amountOfCurrency: string;\n    changeCurrencyField: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    changeAction: (e: React.MouseEvent<HTMLSpanElement>) => void;\n    changeCurrentCurrency: (e: React.MouseEvent<HTMLLIElement>) => void;\n};\nconst CurrencyExchange: React.FunctionComponent<CurrencyExchangePropsType> = (\n    {currenciesName, currentCurrency, currencyRate, isBuying, amountOfBYN, amountOfCurrency, changeCurrencyField, changeAction, changeCurrentCurrency,}\n) => {\n\n    const viewCurrency = isBuying ? (\n        <>\n            <label>\n                {' '}\n                You give the next amount of UAH :\n                <input value={amountOfBYN} data-currency=\"byn\" onChange={changeCurrencyField}/>\n            </label><br/>\n            <label>\n                {' '}\n                You get the next amount of {currentCurrency}:\n                <input value={amountOfCurrency} data-currency=\"currency\" onChange={changeCurrencyField}/>\n            </label>\n        </>\n    ) : (\n        <>\n            <label>\n                {' '}\n                You give the next amount of {currentCurrency}:\n                <input value={amountOfCurrency} data-currency=\"currency\" onChange={changeCurrencyField}/>\n            </label><br/>\n            <label>\n                {' '}\n                You get the next amount of UAH:\n                <input value={amountOfBYN} data-currency=\"byn\" onChange={changeCurrencyField}/>\n            </label>\n        </>\n    );\n    // debugger\n    return (\n        <div className={cl.container}>\n            <div className={cl.currency}>\n                <h2>Currency exchange</h2>\n                <div className={cl.currencyNames}>\n                    <p>Current currency:</p>\n                    <ul>\n                        {currenciesName.map((currency: string, index: number) => {\n                            return (\n                                <li\n                                    key={`${index}-${currency}`}\n                                    className={`cl.currencies ${currentCurrency === currency ? 'cl.activeCurrency' : null}`}\n                                    onClick={changeCurrentCurrency}\n                                    data-currency={currency}\n                                >\n                                    {currency}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n                <div className={cl.currencyAction}>\n                    <span className={isBuying ? `${cl.active}` : ''} data-action=\"buy\" onClick={changeAction}>\n                      Buy\n                    </span>\n                    <span className={isBuying ? '' : `${cl.active}`} data-action=\"sell\" onClick={changeAction}>\n                      Sell\n                    </span>\n                </div>\n                <div className=\"fields\">\n                    <p>Currency rate: {currencyRate}</p>\n                    {viewCurrency}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CurrencyExchange;\n","import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootStateType} from \"../../redux/state\";\nimport {\n    ChangeActionAC,\n    ChangeCurrencyFieldAC,\n    changeCurrentCurrencyAC,\n    CurrencyTypeForCalc\n} from \"../../redux/currencyReducer\";\nimport CurrencyExchange from \"../../components/CurrencyExchange/CurrencyExchange\";\n\n\n\nexport const CurrencyEContainer = () => {\n    const dispatch = useDispatch()\n    let currentCurrency = useSelector<RootStateType, string>(state => state.currency.currentCurrency);\n    let amountOfBYN = useSelector<RootStateType, string>(state => state.currency.amountOfBYN);\n    let amountOfCurrency = useSelector<RootStateType, string>(state => state.currency.amountOfCurrency);\n    let isBuying = useSelector<RootStateType, boolean>(state => state.currency.isBuying)\n    let currencies = useSelector<RootStateType, Array<CurrencyTypeForCalc>>(state => state.currency.currencies)\n    let currencyRate: number = 0;\n    const currenciesName = currencies.map((currency) => {\n            if (currency.currencyName === currentCurrency) {\n                currencyRate = isBuying ? currency.buyRate : currency.sellRate;\n            }\n            return currency.currencyName;\n        }\n    );\n    const setCurrencyAmount = (amountOfBYN: string, amountOfCurrency: string) => {\n        dispatch(ChangeCurrencyFieldAC(amountOfBYN, amountOfCurrency));\n    }\n    const changeCurrencyField = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let value = e.currentTarget.value;\n        if (!isFinite(+value)) return;\n        if (e.currentTarget.dataset.currency) {\n            const trigger: string = e.currentTarget.dataset.currency;\n            if (trigger === 'byn') {\n                if (value === '') {\n                    setCurrencyAmount(value, value);\n                } else {\n                    setCurrencyAmount(value, (+Number(value).toFixed(5) / currencyRate).toFixed(5));\n                }\n            } else {\n                if (value === '') {\n                    setCurrencyAmount(value, value);\n                } else {\n                    setCurrencyAmount((+Number(value).toFixed(5) * currencyRate).toFixed(5), value);\n                }\n            }\n        }\n    };\n    const setAction = (isBuying: boolean) => {\n        dispatch(ChangeActionAC(isBuying));\n    }\n    const changeAction = (e: React.MouseEvent<HTMLSpanElement>) => {e.currentTarget.dataset.action === 'buy'\n        // dispatch(ChangeActionAC ?(true) : (false) )\n          ? setAction(true)\n          : setAction(false);\n    };\n    const changeCurrency = (currency: string) => {\n        dispatch(changeCurrentCurrencyAC(currency));\n    }\n    const changeCurrentCurrency = (e: React.MouseEvent<HTMLLIElement>) => {\n      e.currentTarget.dataset.currency && changeCurrency(e.currentTarget.dataset.currency);\n    };\n\n    return (\n            <CurrencyExchange\n                currenciesName={currenciesName}\n                currentCurrency={currentCurrency}\n                currencyRate={currencyRate}\n                isBuying={isBuying}\n                amountOfBYN={amountOfBYN}\n                amountOfCurrency={amountOfCurrency}\n                changeCurrencyField={changeCurrencyField}\n                changeAction={changeAction}\n                changeCurrentCurrency={changeCurrentCurrency}\n            />\n\n    );\n};\n","import React from \"react\";\nimport './App.css';\nimport Header, {PATH} from \"./components/Header/Header\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport CurrencyRates from \"./components/CurrencyRates/CurrencyRates\";\nimport {CurrencyEContainer} from \"./containers/CurrencyExchangeContainer/CurrencyExchangeContainer\";\n\nfunction App() {\n    return (\n        <div className={\"App\"}>\n            <Header/>\n            <Switch>\n                <Route path={'/'} exact render={()=><Redirect to={PATH.CURRENSYRATES}/>}/>\n                {/*<Route path={'/'} exact render={()=>{<CurrencyEContainer/>}}/>*/}\n                <Route path={PATH.CALCULATOR} exact render={()=><CurrencyEContainer/>}/>\n                <Route path={PATH.CURRENSYRATES} render={()=><CurrencyRates/>}/>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { currencyReducer } from './currencyReducer';\nimport {currencyRatesReducer} from \"./currencyRatesReducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\n\nconst reducers = combineReducers({\n  currency: currencyReducer,\n  currencyRates: currencyRatesReducer,\n});\nexport type RootStateType = ReturnType<typeof reducers>;\n\nexport const store = createStore(reducers,applyMiddleware(thunkMiddleware));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport { store } from './redux/state';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}